[{"/Users/hakima/Desktop/quiz/src/index.js":"1","/Users/hakima/Desktop/quiz/src/App.js":"2","/Users/hakima/Desktop/quiz/src/reportWebVitals.js":"3","/Users/hakima/Desktop/quiz/src/Quiz.js":"4","/Users/hakima/Desktop/quiz/src/QuizData.js":"5","/Users/hakima/Desktop/quiz/src/QuizR.js":"6","/Users/hakima/Desktop/quiz/src/Cards.js":"7"},{"size":535,"mtime":1691275650471,"results":"8","hashOfConfig":"9"},{"size":1611,"mtime":1691593823914,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1691275649484,"results":"11","hashOfConfig":"9"},{"size":2615,"mtime":1691420315040,"results":"12","hashOfConfig":"9"},{"size":1128,"mtime":1691337126480,"results":"13","hashOfConfig":"9"},{"size":286,"mtime":1691358828365,"results":"14","hashOfConfig":"9"},{"size":99,"mtime":1691529174873,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v41cyq",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},"/Users/hakima/Desktop/quiz/src/index.js",[],[],"/Users/hakima/Desktop/quiz/src/App.js",["39","40"],[],"/Users/hakima/Desktop/quiz/src/reportWebVitals.js",[],[],[],"/Users/hakima/Desktop/quiz/src/Quiz.js",["41"],[],"/Users/hakima/Desktop/quiz/src/QuizData.js",[],[],"/Users/hakima/Desktop/quiz/src/QuizR.js",[],[],"/Users/hakima/Desktop/quiz/src/Cards.js",["42"],[],"import React, { useState, useEffect } from 'react';\nimport Photo from './Photo'; // Make sure you have the correct import path for the Photo component\nimport bImage from './img/b.jpeg';\nimport mnImage from './img/mn.jpeg';\nimport mImage from './img/m.jpeg';\nimport uImage from './img/u.jpeg';\nimport hImage from './img/h.jpeg';\nimport cImage from './img/c.jpeg';\n\nexport default function Cards() {\n  const [cards, setCards] = useState([\n    { id: 0, name: 'b', status: 'hidden', img: bImage },\n    { id: 0, name: 'b', status: 'hidden', img: bImage },\n    { id: 1, name: 'mn', status: 'hidden', img: mnImage },\n    { id: 1, name: 'mn', status: 'hidden', img: mnImage },\n    { id: 2, name: 'm', status: 'hidden', img: mImage },\n    { id: 2, name: 'm', status: 'hidden', img: mImage },\n    { id: 3, name: 'u', status: 'hidden', img: uImage },\n    { id: 3, name: 'u', status: 'hidden', img: uImage },\n    { id: 4, name: 'h', status: 'hidden', img: hImage },\n    { id: 4, name: 'h', status: 'hidden', img: hImage },\n    { id: 5, name: 'c', status: 'hidden', img: cImage }, \n    { id: 5, name: 'c', status: 'hidden', img: cImage }, \n  ].map((card) => ({ ...card, id: Math.random() }))); // Ensure each card has a unique ID\n\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      checkForMatch();\n    }\n  }, [flippedCards]);\n\n  const flipCard = (id) => {\n    if (flippedCards.length < 2 && cards[id].status !== 'matched') {\n      setCards((prevCards) =>\n        prevCards.map((card) =>\n          card.id === id ? { ...card, status: 'visible' } : card\n        )\n      );\n      setFlippedCards((prevFlipped) => [...prevFlipped, id]);\n    }\n  };\n\n  const checkForMatch = () => {\n    const [cardId1, cardId2] = flippedCards; \n    if (cards[cardId1].name === cards[cardId2].name) {\n      setCards((prevCards) =>\n        prevCards.map((card, index) =>\n          index === cardId1 || index === cardId2 ? { ...card, status: 'matched' } : card\n        )\n      );\n    } else {\n      setTimeout(() => {\n        setCards((prevCards) =>\n          prevCards.map((card, index) =>\n            index === cardId1 || index === cardId2 ? { ...card, status: 'hidden' } : card\n          )\n        );\n      }, 1000);\n    }\n    setFlippedCards([]);\n  };\n\n  return (\n    <div className=\"main\" style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {cards.map((card, index) => (\n        <Photo\n          key={card.id} // Use unique card ID as the key\n          card={card}\n          onClick={() => flipCard(index)}\n        />\n      ))}\n    </div>\n  );\n}\n",{"ruleId":"43","severity":1,"message":"44","line":12,"column":9,"nodeType":"45","endLine":12,"endColumn":106},{"ruleId":"46","severity":1,"message":"47","line":43,"column":13,"nodeType":"48","endLine":43,"endColumn":55},{"ruleId":"43","severity":1,"message":"49","line":51,"column":6,"nodeType":"50","endLine":51,"endColumn":28,"suggestions":"51"},{"ruleId":"43","severity":1,"message":"52","line":26,"column":6,"nodeType":"50","endLine":26,"endColumn":20,"suggestions":"53"},"react-hooks/exhaustive-deps","The 'images' array makes the dependencies of useEffect Hook (at line 32) change on every render. To fix this, wrap the initialization of 'images' in its own useMemo() Hook.","VariableDeclarator","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'changeQuestion'. Either include it or remove the dependency array.","ArrayExpression",["54"],"React Hook useEffect has a missing dependency: 'checkForMatch'. Either include it or remove the dependency array.",["55"],{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [timeRemaining, showR, changeQuestion]",{"range":"60","text":"61"},"Update the dependencies array to be: [checkForMatch, flippedCards]",{"range":"62","text":"63"},[1246,1268],"[timeRemaining, showR, changeQuestion]",[1021,1035],"[checkForMatch, flippedCards]"]