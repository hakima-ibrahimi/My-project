{"ast":null,"code":"var _jsxFileName = \"/Users/hakima/Desktop/quiz/src/Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Photo from './Photo';\nimport bImage from './img/b.jpeg';\nimport mnImage from './img/mn.jpeg';\nimport mImage from './img/m.jpeg';\nimport uImage from './img/u.jpeg';\nimport hImage from './img/h.jpeg';\nimport cImage from './img/c.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 0,\n    name: 'b',\n    status: 'hidden',\n    img: bImage\n  }, {\n    id: 1,\n    name: 'mn',\n    status: 'hidden',\n    img: mnImage\n  }, {\n    id: 2,\n    name: 'm',\n    status: 'hidden',\n    img: mImage\n  }, {\n    id: 3,\n    name: 'u',\n    status: 'hidden',\n    img: uImage\n  }, {\n    id: 4,\n    name: 'h',\n    status: 'hidden',\n    img: hImage\n  }, {\n    id: 5,\n    name: 'c',\n    status: 'hidden',\n    img: cImage\n  }, {\n    id: 6,\n    name: 'b',\n    status: 'hidden',\n    img: bImage\n  }, {\n    id: 7,\n    name: 'mn',\n    status: 'hidden',\n    img: mnImage\n  }, {\n    id: 8,\n    name: 'm',\n    status: 'hidden',\n    img: mImage\n  }, {\n    id: 9,\n    name: 'u',\n    status: 'hidden',\n    img: uImage\n  }, {\n    id: 10,\n    name: 'h',\n    status: 'hidden',\n    img: hImage\n  }, {\n    id: 11,\n    name: 'c',\n    status: 'hidden',\n    img: cImage\n  }].sort(() => Math.random() - 0.5));\n  const [flippedCards, setFlippedCards] = useState([]);\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      checkForMatch();\n    }\n  }, [flippedCards]);\n  const flipCard = id => {\n    if (flippedCards.length < 2) {\n      setCards(prevCards => prevCards.map(card => card.id === id ? {\n        ...card,\n        status: 'visible'\n      } : card));\n      setFlippedCards(prevFlipped => [...prevFlipped, id]);\n    }\n  };\n  const checkForMatch = () => {\n    const [card1, card2] = flippedCards;\n    if (cards[card1].name === cards[card2].name) {\n      setCards(prevCards => prevCards.map((card, index) => index === card1 || index === card2 ? {\n        ...card,\n        status: 'matched'\n      } : card));\n    } else {\n      setTimeout(() => {\n        setCards(prevCards => prevCards.map((card, index) => index === card1 || index === card2 ? {\n          ...card,\n          status: 'hidden'\n        } : card));\n      }, 1000);\n    }\n    setFlippedCards([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Photo, {\n      card: card,\n      onClick: () => flipCard(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"NytKBmLTgcBVqn+RMgniEapODVE=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","Photo","bImage","mnImage","mImage","uImage","hImage","cImage","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","id","name","status","img","sort","Math","random","flippedCards","setFlippedCards","length","checkForMatch","flipCard","prevCards","map","card","prevFlipped","card1","card2","index","setTimeout","className","style","display","flexWrap","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hakima/Desktop/quiz/src/Cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Photo from './Photo';\n\n\nimport bImage from './img/b.jpeg';\nimport mnImage from './img/mn.jpeg';\nimport mImage from './img/m.jpeg';\nimport uImage from './img/u.jpeg';\nimport hImage from './img/h.jpeg';\nimport cImage from './img/c.jpeg';\n\nexport default function Cards() {\n  const [cards, setCards] = useState([\n    { id: 0, name: 'b', status: 'hidden', img: bImage },\n    { id: 1, name: 'mn', status: 'hidden', img: mnImage },\n    { id: 2, name: 'm', status: 'hidden', img: mImage },\n    { id: 3, name: 'u', status: 'hidden', img: uImage },\n    { id: 4, name: 'h', status: 'hidden', img: hImage },\n    { id: 5, name: 'c', status: 'hidden', img: cImage }, \n    { id: 6, name: 'b', status: 'hidden', img: bImage },\n    { id: 7, name: 'mn', status: 'hidden', img: mnImage },\n    { id: 8, name: 'm', status: 'hidden', img: mImage },\n    { id: 9, name: 'u', status: 'hidden', img: uImage },\n    { id: 10, name: 'h', status: 'hidden', img: hImage },\n    { id: 11, name: 'c', status: 'hidden', img: cImage },\n  ].sort(() => Math.random() - 0.5));\n\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      checkForMatch();\n    }\n  }, [flippedCards]);\n\n  const flipCard = (id) => {\n    if (flippedCards.length < 2) {\n      setCards((prevCards) =>\n        prevCards.map((card) =>\n          card.id === id ? { ...card, status: 'visible' } : card\n        )\n      );\n      setFlippedCards((prevFlipped) => [...prevFlipped, id]);\n    }\n  };\n\n  const checkForMatch = () => {\n    const [card1, card2] = flippedCards;\n    if (cards[card1].name === cards[card2].name) {\n      \n      setCards((prevCards) =>\n        prevCards.map((card, index) =>\n          index === card1 || index === card2 ? { ...card, status: 'matched' } : card\n        )\n      );\n    } else {\n     \n      setTimeout(() => {\n        setCards((prevCards) =>\n          prevCards.map((card, index) =>\n            index === card1 || index === card2 ? { ...card, status: 'hidden' } : card\n          )\n        );\n      }, 1000); \n    }\n    setFlippedCards([]);\n  };\n\n  return (\n    <div className=\"main\" style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {cards.map((card, index) => (\n        <Photo\n          key={index}\n          card={card}\n          onClick={() => flipCard(index)}\n        />\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}